
<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LinguaLearn</title>
    <link href="/css/output.css" rel="stylesheet">
    <!-- Add animate.css for smooth animations -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>
</head>
<body>
    <!-- Navbar with theme toggle -->
    <div class="navbar bg-base-100 shadow-lg sticky top-0 z-50">
        <div class="navbar-start">
            <div class="dropdown">
                <label tabindex="0" class="btn btn-ghost lg:hidden">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h8m-8 6h16" />
                    </svg>
                </label>
                <ul tabindex="0" class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52">
                    <li><a href="#features">Features</a></li>
                    <li><a href="#how-it-works">How It Works</a></li>
                    <li><a href="#pricing">Pricing</a></li>
                </ul>
            </div>
            <a class="btn btn-ghost normal-case text-xl">LinguaLearn</a>
        </div>
        <div class="navbar-center hidden lg:flex">
            <ul class="menu menu-horizontal px-1">
                <li><a href="#features">Features</a></li>
                <li><a href="#how-it-works">How It Works</a></li>
                <li><a href="#pricing">Pricing</a></li>
            </ul>
        </div>
        <div class="navbar-end">
            <label class="swap swap-rotate mr-4">
                <input type="checkbox" id="theme-toggle" />
                <svg class="swap-on fill-current w-6 h-6" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5.64,17l-.71.71a1,1,0,0,0,0,1.41,1,1,0,0,0,1.41,0l.71-.71A1,1,0,0,0,5.64,17ZM5,12a1,1,0,0,0-1-1H3a1,1,0,0,0,0,2H4A1,1,0,0,0,5,12Zm7-7a1,1,0,0,0,1-1V3a1,1,0,0,0-2,0V4A1,1,0,0,0,12,5ZM5.64,7.05a1,1,0,0,0,.7.29,1,1,0,0,0,.71-.29,1,1,0,0,0,0-1.41l-.71-.71A1,1,0,0,0,4.93,6.34Zm12,.29a1,1,0,0,0,.7-.29l.71-.71a1,1,0,1,0-1.41-1.41L17,5.64a1,1,0,0,0,0,1.41A1,1,0,0,0,17.66,7.34ZM21,11H20a1,1,0,0,0,0,2h1a1,1,0,0,0,0-2Zm-9,8a1,1,0,0,0-1,1v1a1,1,0,0,0,2,0V20A1,1,0,0,0,12,19ZM18.36,17A1,1,0,0,0,17,18.36l.71.71a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.41ZM12,6.5A5.5,5.5,0,1,0,17.5,12,5.51,5.51,0,0,0,12,6.5Zm0,9A3.5,3.5,0,1,1,15.5,12,3.5,3.5,0,0,1,12,15.5Z"/></svg>
                <svg class="swap-off fill-current w-6 h-6" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M21.64,13a1,1,0,0,0-1.05-.14,8.05,8.05,0,0,1-3.37.73A8.15,8.15,0,0,1,9.08,5.49a8.59,8.59,0,0,1,.25-2A1,1,0,0,0,8,2.36,10.14,10.14,0,1,0,22,14.05,1,1,0,0,0,21.64,13Zm-9.5,6.69A8.14,8.14,0,0,1,7.08,5.22v.27A10.15,10.15,0,0,0,17.22,15.63a9.79,9.79,0,0,0,2.1-.22A8.11,8.11,0,0,1,12.14,19.73Z"/></svg>
            </label>
            <a href="/login" class="btn btn-ghost">Login</a>
            <a href="/register" class="btn btn-primary animate-pulse">Get Started</a>
        </div>
    </div>

    <!-- Hero Section with Typing Effect -->
    <div class="hero min-h-[70vh] bg-base-200">
        <div class="hero-content text-center">
            <div class="max-w-md">
                <h1 class="text-5xl font-bold mb-4">Master <span id="language-text" class="text-primary"></span></h1>
                <p class="py-6">Learn languages effectively with our interactive platform. Practice vocabulary, grammar, and more with personalized lessons and track your progress.</p>
                <div class="stats shadow my-4">
                    <div class="stat">
                        <div class="stat-title">Active Users</div>
                        <div class="stat-value" id="user-count">0</div>
                        <div class="stat-desc">↗︎ 400 (22%)</div>
                    </div>
                    <div class="stat">
                        <div class="stat-title">Languages</div>
                        <div class="stat-value" id="language-count">0</div>
                        <div class="stat-desc">Updated daily</div>
                    </div>
                </div>
                <a href="/register" class="btn btn-primary">Start Learning</a>
            </div>
        </div>
    </div>

    <!-- Interactive Features Section -->
    <section id="features" class="py-16">
        <div class="container mx-auto px-4">
            <h2 class="text-3xl font-bold text-center mb-12">Key Features</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
                <div class="card bg-base-100 shadow-xl hover:scale-105 transition-transform duration-300">
                    <div class="card-body items-center text-center">
                        <div class="radial-progress text-primary" style="--value:0;" id="quiz-progress">0%</div>
                        <h3 class="card-title mt-4">Interactive Quizzes</h3>
                        <p>Test your knowledge with engaging quizzes</p>
                    </div>
                </div>
                <div class="card bg-base-100 shadow-xl hover:scale-105 transition-transform duration-300">
                    <div class="card-body items-center text-center">
                        <div class="radial-progress text-primary" style="--value:0;" id="quiz-progress">0%</div>
                        <h3 class="card-title mt-4">Flash cards</h3>
                        <p>Master vocabulary efficiently with our smart flashcard system</p>
                    </div>
                </div>
                <div class="card bg-base-100 shadow-xl hover:scale-105 transition-transform duration-300">
                    <div class="card-body items-center text-center">
                        <div class="radial-progress text-primary" style="--value:0;" id="quiz-progress">0%</div>
                        <h3 class="card-title mt-4">Grammar Practice</h3>
                        <p>Perfect your grammar with targeted exercises and explanations</p>
                    </div>
                </div>
                <div class="card bg-base-100 shadow-xl hover:scale-105 transition-transform duration-300">
                    <div class="card-body items-center text-center">
                        <div class="radial-progress text-primary" style="--value:0;" id="quiz-progress">0%</div>
                        <h3 class="card-title mt-4">Progress tracking</h3>
                        <p>Monitor your learning journey with detailed progress analytics</p>
                    </div>
                </div>
                <!-- Similar cards for other features... -->
            </div>
        </div>
    </section>

    <!-- Demo Quiz Section -->
    <section class="py-16 bg-base-200">
        <div class="container mx-auto px-4">
            <h2 class="text-3xl font-bold text-center mb-12">Try a Demo Quiz</h2>
            <div class="card max-w-lg mx-auto bg-base-100 shadow-xl">
                <div class="card-body">
                    <div id="demo-quiz">
                        <h3 class="card-title mb-4">Quick Vocabulary Test</h3>
                        <div class="quiz-question mb-4">
                            <p class="font-semibold mb-2" id="question-text">Loading question...</p>
                            <div class="grid gap-2" id="options-container">
                                <!-- Options will be inserted here -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Add other sections (How It Works, Pricing, etc.) here -->

    <!-- Footer remains the same -->

    <script>
        // Theme toggle functionality
        const themeToggle = document.getElementById('theme-toggle');
        themeToggle.addEventListener('change', () => {
            const html = document.querySelector('html');
            html.setAttribute('data-theme', themeToggle.checked ? 'dark' : 'light');
        });

        // Typing effect for languages
        const languages = ['Spanish', 'French', 'German', 'Italian', 'Japanese'];
        let currentIndex = 0;
        const languageText = document.getElementById('language-text');

        async function typeWriter(text) {
            languageText.textContent = '';
            for (let i = 0; i < text.length; i++) {
                languageText.textContent += text[i];
                await new Promise(resolve => setTimeout(resolve, 100));
            }
            await new Promise(resolve => setTimeout(resolve, 1000));
            for (let i = text.length; i >= 0; i--) {
                languageText.textContent = text.substring(0, i);
                await new Promise(resolve => setTimeout(resolve, 50));
            }
        }

        async function cycleLanguages() {
            while (true) {
                await typeWriter(languages[currentIndex]);
                currentIndex = (currentIndex + 1) % languages.length;
            }
        }

        // Animated counters
        function animateCounter(element, target, duration = 2000) {
            let start = 0;
            const increment = target / (duration / 16);
            
            function updateCounter() {
                start += increment;
                if (start < target) {
                    element.textContent = Math.floor(start);
                    requestAnimationFrame(updateCounter);
                } else {
                    element.textContent = target;
                }
            }
            
            updateCounter();
        }

        // Demo quiz functionality
        const demoQuestions = [
            {
                question: "What is 'hello' in Spanish?",
                options: ['Hola', 'Bonjour', 'Ciao', 'Hallo'],
                correct: 0
            },
            // Add more questions...
        ];

        let currentQuestion = 0;

        function loadQuestion() {
            const question = demoQuestions[currentQuestion];
            document.getElementById('question-text').textContent = question.question;
            
            const optionsContainer = document.getElementById('options-container');
            optionsContainer.innerHTML = '';
            
            question.options.forEach((option, index) => {
                const button = document.createElement('button');
                button.className = 'btn btn-outline w-full';
                button.textContent = option;
                button.onclick = () => checkAnswer(index);
                optionsContainer.appendChild(button);
            });
        }

        function checkAnswer(selectedIndex) {
            const question = demoQuestions[currentQuestion];
            const buttons = document.querySelectorAll('#options-container button');
            
            buttons.forEach((button, index) => {
                button.disabled = true;
                if (index === question.correct) {
                    button.classList.add('btn-success');
                } else if (index === selectedIndex && selectedIndex !== question.correct) {
                    button.classList.add('btn-error');
                }
            });

            setTimeout(() => {
                currentQuestion = (currentQuestion + 1) % demoQuestions.length;
                loadQuestion();
            }, 1500);
        }

        // Initialize everything when the page loads
        document.addEventListener('DOMContentLoaded', () => {
            cycleLanguages();
            animateCounter(document.getElementById('user-count'), +100);
            animateCounter(document.getElementById('language-count'), 6);
            loadQuestion();

            // Intersection Observer for animations
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('animate__animated', 'animate__fadeInUp');
                    }
                });
            });

            document.querySelectorAll('.card').forEach(card => {
                observer.observe(card);
            });
        });
    </script>
</body>
</html>
